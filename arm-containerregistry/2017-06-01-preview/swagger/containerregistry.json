{
  "swagger": "2.0",
  "info": {
    "version": "2017-06-01-preview",
    "title": "ContainerRegistryManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications/{replicationName}": {
      "get": {
        "tags": [
          "Replications"
        ],
        "description": "Gets the properties of the specified replication.",
        "operationId": "Replications_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ReplicationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Replication"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Replications"
        ],
        "description": "Creates a replication for a container registry with the specified parameters.",
        "operationId": "Replications_Create",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ReplicationNameParameter"
          },
          {
            "name": "replication",
            "in": "body",
            "description": "The parameters for creating a replication.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Replication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Replication"
            }
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Replications"
        ],
        "description": "Deletes a replication from a container registry.",
        "operationId": "Replications_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ReplicationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "204": {
            "description": "The replication does not exist in the subscription."
          }
        }
      },
      "patch": {
        "tags": [
          "Replications"
        ],
        "description": "Updates a replication with the specified parameters.",
        "operationId": "Replications_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ReplicationNameParameter"
          },
          {
            "name": "replication",
            "in": "body",
            "description": "The parameters for updating a replication.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Replication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Replication"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications": {
      "get": {
        "tags": [
          "Replications"
        ],
        "description": "Lists all the replications for the specified container registry.",
        "operationId": "Replications_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ReplicationListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "description": "Gets the properties of the specified webhook.",
        "operationId": "Webhooks_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/WebhookNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Webhooks"
        ],
        "description": "Creates a webhook for a container registry with the specified parameters.",
        "operationId": "Webhooks_Create",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/WebhookNameParameter"
          },
          {
            "name": "webhook",
            "in": "body",
            "description": "The parameters for creating a webhook.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "description": "Deletes a webhook from a container registry.",
        "operationId": "Webhooks_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/WebhookNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "204": {
            "description": "The webhook does not exist in the subscription."
          }
        }
      },
      "patch": {
        "tags": [
          "Webhooks"
        ],
        "description": "Updates a webhook with the specified parameters.",
        "operationId": "Webhooks_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/WebhookNameParameter"
          },
          {
            "name": "webhook",
            "in": "body",
            "description": "The parameters for updating a webhook.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "description": "Lists all the webhooks for the specified container registry.",
        "operationId": "Webhooks_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WebhookListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/ping": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Triggers a ping event to be sent to the webhook.",
        "operationId": "Webhooks_Ping",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/WebhookNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          }
        }
      }
    }
  },
  "definitions": {
    "Replication": {
      "description": "An object that represents a replication for a container registry.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReplicationProperties",
          "description": "The properties of the replication.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ReplicationProperties": {
      "description": "The properties of a replication.",
      "properties": {
        "provisioningState": {
          "description": "The status of the replication at the time the operation was called.",
          "enum": [
            "Creating",
            "Succeeded"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          }
        },
        "endpoint": {
          "description": "The endpoint URI of the replication.",
          "type": "string",
          "readOnly": true
        },
        "isEnabled": {
          "description": "The value that indicates whether the replication is enabled.",
          "type": "boolean"
        }
      }
    },
    "ReplicationListResult": {
      "description": "The result of a request to list replications for a container registry.",
      "properties": {
        "value": {
          "description": "The list of replications. Since this list may be incomplete, the nextLink field should be used to request the next list of replications.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Replication"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next list of replications.",
          "type": "string"
        }
      }
    },
    "Webhook": {
      "description": "An object that represents a webhook for a container registry.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebhookProperties",
          "description": "The properties of the webhook.",
          "x-ms-client-flatten": true
        }
      }
    },
    "WebhookProperties": {
      "description": "The properties of a webhook.",
      "required": [
        "serviceUri"
      ],
      "properties": {
        "serviceUri": {
          "description": "The service URI for the webhook to post notifications.",
          "type": "string"
        },
        "isEnabled": {
          "description": "The value that indicates whether the webhook is enabled.",
          "type": "boolean"
        },
        "scope": {
          "description": "The scope of repositories where the event can be triggered.",
          "type": "string"
        },
        "events": {
          "description": "The list of events that trigger the webhook to post notifications.",
          "type": "array",
          "items": {
            "enum": [
              "push",
              "pull",
              "delete"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "WebhookEvent",
              "modelAsString": true
            }
          }
        }
      }
    },
    "WebhookListResult": {
      "description": "The result of a request to list webhooks for a container registry.",
      "properties": {
        "value": {
          "description": "The list of webhooks. Since this list may be incomplete, the nextLink field should be used to request the next list of webhooks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webhook"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next list of webhooks.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "An Azure resource.",
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The location of the resource. This cannot be changed after the resource is created.",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The Microsoft Azure subscription ID.",
      "required": true,
      "type": "string"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The client API version.",
      "required": true,
      "type": "string"
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group to which the container registry belongs.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RegistryNameParameter": {
      "name": "registryName",
      "in": "path",
      "description": "The name of the container registry.",
      "required": true,
      "type": "string",
      "maxLength": 50,
      "minLength": 5,
      "pattern": "^[a-zA-Z0-9]*$",
      "x-ms-parameter-location": "method"
    },
    "WebhookNameParameter": {
      "name": "webhookName",
      "in": "path",
      "description": "The name of the webhook.",
      "required": true,
      "type": "string",
      "maxLength": 50,
      "minLength": 5,
      "pattern": "^[a-zA-Z0-9]*$",
      "x-ms-parameter-location": "method"
    },
    "ReplicationNameParameter": {
      "name": "replicationName",
      "in": "path",
      "description": "The name of the replication.",
      "required": true,
      "type": "string",
      "maxLength": 50,
      "minLength": 5,
      "pattern": "^[a-zA-Z0-9]*$",
      "x-ms-parameter-location": "method"
    }
  }
}